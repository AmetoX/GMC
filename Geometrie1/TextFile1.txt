Seminar 1
-Aria triunghiului format din trei puncte: ( A(x1,y1,1) B(x2,y2,1) C(0,0,1) )
	-Aabc=1/2*|x1 y1 1| = 1/2*(x1y2-x2y1)
			  |x2 y2 1|
			  |0  0  1|
	-Valoarea unui determinant "<" :  A < B <=>x1y2 <= x2y1
-Tehnica 3-Suma.

(d1) a1x+b1y+c=0
(d2) a2x+b2y+c=0
	det=|a1 b1| != 0
		|a2 b2|

	x=  |c1 b1| 
		|c2 b2|
		supra det

	y=	|a1 c1| 
		|a2 c2|
		supra det
		
-SortedList, TreeNode (colectii/clase).

Tema 3 :
-Se da o multime de puncte in plan , se cere un cerc de arie minima care
sa contina toate punctele in interior.
	-minimal enclosing circle.
	(solutia/metoda grosiera)
Optional:
	-variante optimizate a acestor probleme.


Determinant de gradul 3:
a11 a12 a13
b11 b12 b13
c11 c12 c13


a11 a12 a13
b11 b12 b13
c11 c12 c13
a11 a12 a13
b12 b12 b13 

det:a11b12c13+b11c12a13+c11a12b13-
b11a12c13-a11c12b13-c11b12a13

x1 y1 1
x2 y2 1
x3 y3 1
x1 y1 1
x2 y2 1

det:x1y2+x2y3+x3y1-x2y1-x1y3-x3y2



-Rezolvare problema triunghi 1.0:

if (i >= 2)
                {
                    float arie = (ariiX[i - 2] * ariiY[i-1] + ariiX[i-1]*ariiY[i] + ariiX[i]*ariiY[i-2] - ariiX[i-1] 
                        * ariiY[i-2] - ariiX[i-2]*ariiY[i] - ariiX[i]*ariiY[i-1])/2;
                    if (arie < 0)
                        arie *= -1;
                    
                    listBox1.Items.Add(arie.ToString());
                    if (arie < arie2)
                    {
                        x1 = ariiX[i - 2];
                        y1 = ariiY[i - 2];
                        x2 = ariiX[i - 1];
                        y2 = ariiY[i - 1];
                        x3 = ariiX[i];
                        y3 = ariiY[i];
                    }
                    arie2 = arie;
                }
--------------------------------------

                    arie = (ariiX[i - 2] * ariiY[i - 1] + ariiX[i - 1] * ariiY[i] + ariiX[i] * ariiY[i - 2] - ariiX[i]
                        * ariiY[i - 1] - ariiX[i - 2] * ariiY[i] - ariiX[i - 1] * ariiY[i - 2]);
                    if (arie < 0)
                        arie *= -1;
                    arie /= 2;

                    arii[i] = arie;
                    for (int j = 2; j < arii.Length; j++)
                    {
                        if (arie <= arii[j])
                        {
                            x1 = ariiX[i - 2];
                            y1 = ariiY[i - 2];
                            x2 = ariiX[i - 1];
                            y2 = ariiY[i - 1];
                            x3 = ariiX[i];
                            y3 = ariiY[i];

                        }
                    }